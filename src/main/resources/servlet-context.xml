<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
 		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd	
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven>
		<argument-resolvers>
			<beans:bean class="com.limenets.common.resolver.LimeLoginArgResolver" />
		</argument-resolvers>
	
		<!-- jackson 이 hashmap을 json으로 변경할때 Date타입의 데이터를 Timestamp로 변경하는데 이것을 제어함.  -->
		<message-converters register-defaults="true">
			<beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<beans:property name="objectMapper">
					<beans:bean class="com.fasterxml.jackson.databind.ObjectMapper">
						<beans:property name="dateFormat">
							<beans:bean class="java.text.SimpleDateFormat">
								<beans:constructor-arg value="yyyy-MM-dd HH:mm:ss" />
							</beans:bean>
						</beans:property>
					</beans:bean>
				</beans:property>
			</beans:bean>
		</message-converters>
	</annotation-driven>
	
	<beans:bean id="jsonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.limenets" />
	
	<!-- Transaction -->
	<tx:annotation-driven proxy-target-class="true" />

	<!-- AOP -->	
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<beans:bean id="adminCheck" class="com.limenets.eorder.aop.AdminCheck" />
	<beans:bean id="frontCheck" class="com.limenets.eorder.aop.FrontCheck" />
	
	<!-- mobile/tablet/desktop check Intercepter -->
	<interceptors>
		<beans:bean class="org.springframework.mobile.device.DeviceResolverHandlerInterceptor" />
	</interceptors>

	<!-- Scheduler -->
	<context:component-scan base-package="com.limenets.eorder.scheduler" />
	<task:scheduler id="jobScheduler" pool-size="150" />
	<task:annotation-driven scheduler="jobScheduler" />
	
	<!-- <context:property-placeholder location="classpath:site.properties" /> -->

</beans:beans>
